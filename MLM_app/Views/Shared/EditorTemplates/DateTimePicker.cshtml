@model DateTime?
@*<link href="~/Content/PersianDatePicker.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-clockpicker.min.css" rel="stylesheet" />
    <script src="~/Scripts/PersianDatePicker.min.js"></script>
    <script src="~/Scripts/bootstrap-clockpicker.min.js"></script>*@

<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap-clockpicker.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<script src="~/Scripts/bootstrap-clockpicker.min.js"></script>

<div class="col-md-3">

    @Html.TextBoxFor(model => model, new { @ETname = "date" + ViewData["Modified"], @Value = @Model != null ? Model.Value.ToString("MM/dd/yyyy") : DateTime.Now.Date.ToString("MM/dd/yyyy"), @class = @ViewData["class"], type = "date" })

</div>


@* When the user clicks the Submit button, we concatenate the date and time and send it to the server *@
<script type="text/javascript">

    $(document).ready(function () {


        $('#StartDate').datetimepicker();

        $('.clockpicker').clockpicker();
        $("form").submit(function (event) {
            var vd = '@ViewData["modified"]';
            $('input[ETname=date' + vd + ']').val($('input[ETname=date' + vd + ']').val());


        });
    });
</script>


<script>

    $(document).ready(function () {

        let startDate = document.getElementById('startDate')
        /* let endDate = document.getElementById('endDate')*/

        startDate.addEventListener('change', (e) => {
            let startDateVal = e.target.value
            document.getElementById('startDateSelected').innerText = startDateVal
        })

    });
</script>