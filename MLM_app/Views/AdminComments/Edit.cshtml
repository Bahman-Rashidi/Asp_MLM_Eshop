@model MLM_app.Models.Comment

@{
    ViewBag.Title = "Edit Comment";
    Layout = "~/Views/Shared/_LayoutMLM.cshtml";
}

<h2 class="title text-center">Edit Comment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CommentId)
    @Html.HiddenFor(model => model.ParentId)
    @Html.HiddenFor(model => model.ProductID)
    @Html.HiddenFor(model => model.SliderId)


    @*<div class="form-group">
            @Html.LabelFor(model => model.PageID, "PageID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PageID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PageID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, "ProductID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, "ParentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @if (Model.PageID != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.PageID, "Page Title", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PageID", "--Please select the page title--")
                @Html.ValidationMessageFor(model => model.PageID)
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, "Title", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductID", "--Please select the product title--")
                @Html.ValidationMessageFor(model => model.ProductID)
            </div>
        </div>
    }
    @if (Model.ParentId != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, "Parent comment", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentId", "--Please select the parent comment--")
                @Html.ValidationMessageFor(model => model.ParentId)
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.CommentDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CommentDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CommentDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CommentIsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CommentIsActive)
                @Html.ValidationMessageFor(model => model.CommentIsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CommentContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CommentContent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CommentContent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AuthorEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AuthorEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AuthorEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="buttons">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
            @Html.ActionLink("Back to the menu", "Index")
        </div>
    </div>
</div>
}
